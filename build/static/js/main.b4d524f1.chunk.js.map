{"version":3,"sources":["services/httpService.js","services/gameService.js","services/genreService.js","services/authService.js","components/common/like.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/gamesTable.jsx","components/searchBox.jsx","components/common/listGroup.jsx","components/common/pagination.jsx","utils/paginate.js","components/games.jsx","components/customers.jsx","components/rentals.jsx","components/notFound.jsx","components/navBar.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/gameForm.jsx","components/loginForm.jsx","services/userService.js","components/registerForm.jsx","components/logout.jsx","components/common/protectedRoute.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["axios","interceptors","response","use","error","status","toast","console","Promise","reject","http","get","post","put","delete","setJwt","jwt","defaults","headers","common","apiEndpoint","apiUrl","gameUrl","id","getGame","gameId","saveGame","game","_id","body","deleteGame","getGenres","tokenKey","login","email","password","a","data","localStorage","setItem","loginWithJwt","getCurrentUser","getItem","jwtDecode","ex","Like","props","classes","liked","onClick","style","cursor","className","TableHeader","raiseSort","path","sortColumn","order","onSort","renderSortIcon","column","this","columns","map","label","key","React","Component","TableBody","renderCell","item","content","_","createKey","Table","GamesTable","to","title","onLike","deleteColumn","onDelete","user","isAdmin","push","games","SearchBox","value","onChange","type","name","placeholder","e","currentTarget","ListGroup","items","textProperty","valueProperty","onItemSelect","selectedItem","defaultProps","Pagination","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","range","page","paginate","pageNumber","startIndex","slice","take","Games","state","genres","searchQuery","selectedGenre","handleDelete","originalGames","filter","g","setState","handleLike","index","indexOf","handlePageChange","handleGenreSelect","genre","handleSort","handleSearch","query","getPagedData","allGames","filtered","toLowerCase","startsWith","orderBy","totalCount","length","count","marginBottom","Customers","Rentals","NotFound","NavBar","Fragment","Input","rest","htmlFor","Select","options","option","Form","errors","validate","Joi","schema","abortEarly","details","message","validateProperty","obj","handleSubmit","preventDefault","doSubmit","handleChange","input","errorMessage","disabled","GameForm","genreId","numberInStock","dailyRentalRate","string","required","number","min","max","history","match","params","mapToViewModel","replace","populateGenres","populateGame","onSubmit","renderInput","renderSelect","renderButton","LoginForm","username","location","window","from","pathname","register","RegisterForm","Logout","removeItem","ProtectedRoute","component","render","App","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","log","process","REACT_APP_NAME","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b4d524f1.chunk.js","sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\n\naxios.interceptors.response.use(null, (error) => {\n    const expectedError =\n        error.response &&\n        error.response.status >= 400 &&\n        error.response.status < 500;\n\n    if (!expectedError) {\n        toast.error('An unexprecred error occurred.');\n        console.error(error);\n    }\n\n    return Promise.reject(error);\n});\n\nfunction setJwt(jwt) {\n    axios.defaults.headers.common['x-auth-token'] = jwt;\n}\n\nconst http = {\n    get: axios.get,\n    post: axios.post,\n    put: axios.put,\n    delete: axios.delete,\n    setJwt,\n};\n\nexport default http;","import http from './httpService';\r\nimport { apiUrl } from '../config.json';\r\n\r\nconst apiEndpoint = apiUrl + '/games';\r\n\r\nfunction gameUrl(id) {\r\n    return `${apiEndpoint}/${id}`;\r\n}\r\n\r\nexport function getGames() {\r\n    return http.get(apiEndpoint);\r\n}\r\n\r\nexport function getGame(gameId) {\r\n    return http.get(gameUrl(gameId));\r\n}\r\n\r\nexport function saveGame(game) {\r\n    if (game._id) {\r\n        const body = {...game };\r\n        delete body._id;\r\n        return http.put(gameUrl(game._id), body);\r\n    }\r\n\r\n    return http.post(apiEndpoint, game);\r\n}\r\n\r\nexport function deleteGame(gameId) {\r\n    return http.delete(gameUrl(gameId));\r\n}","import http from './httpService';\r\nimport { apiUrl } from '../config.json';\r\n\r\nexport function getGenres() {\r\n    return http.get(apiUrl + '/genres');\r\n}","import http from './httpService';\r\nimport { apiUrl } from '../config.json';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nconst apiEndpoint = apiUrl + '/auth';\r\nconst tokenKey = 'token';\r\n\r\nhttp.setJwt(getJwt());\r\n\r\nexport async function login(email, password) {\r\n    const { data: jwt } = await http.post(apiEndpoint, { email, password });\r\n    localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function loginWithJwt(jwt) {\r\n    localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function logout() {\r\n    localStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function getCurrentUser() {\r\n    try {\r\n        const jwt = localStorage.getItem(tokenKey);\r\n        return jwtDecode(jwt);\r\n    } catch (ex) {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport function getJwt() {\r\n    return localStorage.getItem(tokenKey);\r\n}","import React from 'react';\r\n\r\nconst Like = (props) => {\r\n  let classes = 'fa fa-heart';\r\n\r\n  if (!props.liked) classes += '-o';\r\n\r\n  return (\r\n    <i\r\n      onClick={props.onClick}\r\n      style={{ cursor: 'pointer' }}\r\n      className={classes}\r\n      aria-hidden=\"true\"></i>\r\n  );\r\n};\r\n\r\nexport default Like;\r\n","import React from 'react';\r\n\r\nclass TableHeader extends React.Component {\r\n  raiseSort = (path) => {\r\n    const sortColumn = { ...this.props.sortColumn };\r\n\r\n    if (sortColumn.path === path)\r\n      sortColumn.order = sortColumn.order === 'asc' ? 'desc' : 'asc;';\r\n    else {\r\n      sortColumn.path = path;\r\n      sortColumn.order = 'asc';\r\n    }\r\n    this.props.onSort(sortColumn);\r\n  };\r\n\r\n  renderSortIcon = (column) => {\r\n    const { sortColumn } = this.props;\r\n    if (column.path !== sortColumn.path) return null;\r\n    if (sortColumn.order === 'asc') return <i className=\"fa fa-sort-asc\"></i>;\r\n    return <i className=\"fa fa-sort-desc\"></i>;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {this.props.columns.map((column) => (\r\n            <th\r\n              className=\"clickable\"\r\n              key={column.path || column.key}\r\n              onClick={() => this.raiseSort(column.path)}>\r\n              {column.label} {this.renderSortIcon(column)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\n\r\nclass TableBody extends React.Component {\r\n  renderCell = (item, column) => {\r\n    if (column.content) return column.content(item);\r\n    return _.get(item, column.path);\r\n  };\r\n\r\n  createKey = (item, column) => {\r\n    return item._id + (column.path || column.key);\r\n  };\r\n\r\n  render() {\r\n    const { data, columns } = this.props;\r\n    return (\r\n      <tbody>\r\n        {data.map((item) => (\r\n          <tr key={item._id}>\r\n            {columns.map((column) => (\r\n              <td key={this.createKey(item, column)}>\r\n                {this.renderCell(item, column)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React from 'react';\r\nimport TableHeader from './tableHeader';\r\nimport TableBody from './tableBody';\r\n\r\nconst Table = ({ columns, sortColumn, onSort, data }) => {\r\n  return (\r\n    <table className=\"table\">\r\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\r\n      <TableBody columns={columns} data={data} />\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { getCurrentUser } from '../services/authService';\r\nimport Like from './common/like';\r\nimport Table from './common/table';\r\n\r\nclass GamesTable extends React.Component {\r\n  columns = [\r\n    {\r\n      path: 'title',\r\n      label: 'Title',\r\n      content: (game) => <Link to={`/games/${game._id}`}>{game.title}</Link>,\r\n    },\r\n    { path: 'genre.name', label: 'Genre' },\r\n    { path: 'numberInStock', label: 'Stock' },\r\n    { path: 'dailyRentalRate', label: 'Rate' },\r\n    {\r\n      key: 'like',\r\n      content: (game) => (\r\n        <Like liked={game.liked} onClick={() => this.props.onLike(game)} />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  deleteColumn = {\r\n    key: 'delete',\r\n    content: (game) => (\r\n      <button\r\n        onClick={() => this.props.onDelete(game)}\r\n        className=\"btn btn-danger btn-sm\">\r\n        Delete\r\n      </button>\r\n    ),\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    const user = getCurrentUser();\r\n    if (user && user.isAdmin) this.columns.push(this.deleteColumn);\r\n  }\r\n\r\n  render() {\r\n    const { games, onSort, sortColumn } = this.props;\r\n    return (\r\n      <Table\r\n        columns={this.columns}\r\n        data={games}\r\n        sortColumn={sortColumn}\r\n        onSort={onSort}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default GamesTable;\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({ value, onChange }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name=\"query\"\r\n      className=\"form-control my-3\"\r\n      placeholder=\"Search...\"\r\n      value={value}\r\n      onChange={(e) => onChange(e.currentTarget.value)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\n\r\nconst ListGroup = ({\r\n  items,\r\n  textProperty,\r\n  valueProperty,\r\n  onItemSelect,\r\n  selectedItem,\r\n}) => {\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {items.map((item) => (\r\n        <li\r\n          key={item[valueProperty]}\r\n          onClick={() => onItemSelect(item)}\r\n          className={\r\n            item === selectedItem\r\n              ? 'list-group-item active clickable'\r\n              : 'list-group-item clickable'\r\n          }>\r\n          {item[textProperty]}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nListGroup.defaultProps = {\r\n  textProperty: 'name',\r\n  valueProperty: '_id',\r\n};\r\n\r\nexport default ListGroup;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nconst Pagination = ({ itemsCount, pageSize, currentPage, onPageChange }) => {\r\n  const pagesCount = Math.ceil(itemsCount / pageSize);\r\n\r\n  if (pagesCount === 1) return null;\r\n\r\n  const pages = _.range(1, pagesCount + 1);\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {pages.map((page) => (\r\n          <li\r\n            key={page}\r\n            className={page === currentPage ? 'page-item active' : 'page-item'}>\r\n            <button className=\"page-link\" onClick={() => onPageChange(page)}>\r\n              {page}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Pagination;\r\n","import _ from 'lodash';\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n    const startIndex = (pageNumber - 1) * pageSize;\r\n    return _(items).slice(startIndex).take(pageSize).value();\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport _ from 'lodash';\r\n\r\nimport { getGames, deleteGame } from '../services/gameService';\r\nimport { getGenres } from '../services/genreService';\r\n\r\nimport GamesTable from './gamesTable';\r\nimport SearchBox from './searchBox';\r\n\r\nimport ListGroup from './common/listGroup';\r\nimport Pagination from './common/pagination';\r\n\r\nimport { paginate } from '../utils/paginate';\r\n\r\nclass Games extends Component {\r\n  state = {\r\n    games: [],\r\n    genres: [],\r\n    currentPage: 1,\r\n    pageSize: 4,\r\n    searchQuery: '',\r\n    selectedGenre: null,\r\n    sortColumn: { path: 'title', order: 'asc' },\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { data } = await getGenres();\r\n    const genres = [{ _id: '', name: 'All Genres' }, ...data];\r\n\r\n    const { data: games } = await getGames();\r\n    this.setState({ games, genres });\r\n  }\r\n\r\n  handleDelete = async (game) => {\r\n    const originalGames = this.state.games;\r\n    const games = originalGames.filter((g) => g._id !== game._id);\r\n    this.setState({ games });\r\n\r\n    try {\r\n      await deleteGame(game._id);\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        toast.error('This game has already been deleted.');\r\n      this.setState({ games: originalGames });\r\n    }\r\n  };\r\n\r\n  handleLike = (game) => {\r\n    const games = [...this.state.games];\r\n    const index = games.indexOf(game);\r\n    games[index] = { ...games[index] };\r\n    games[index].liked = !games[index].liked;\r\n\r\n    this.setState({ games });\r\n  };\r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleGenreSelect = (genre) => {\r\n    this.setState({ selectedGenre: genre, searchQuery: '', currentPage: 1 });\r\n  };\r\n\r\n  handleSort = (sortColumn) => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  handleSearch = (query) => {\r\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\r\n  };\r\n\r\n  getPagedData = () => {\r\n    const {\r\n      pageSize,\r\n      currentPage,\r\n      sortColumn,\r\n      selectedGenre,\r\n      searchQuery,\r\n      games: allGames,\r\n    } = this.state;\r\n\r\n    let filtered = allGames;\r\n    if (searchQuery)\r\n      filtered = allGames.filter((g) =>\r\n        g.title.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    else if (selectedGenre && selectedGenre._id)\r\n      filtered = allGames.filter((g) => g.genre._id === selectedGenre._id);\r\n\r\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n    const games = paginate(sorted, currentPage, pageSize);\r\n\r\n    return { totalCount: filtered.length, data: games };\r\n  };\r\n\r\n  render() {\r\n    const { length: count } = this.state.games;\r\n    const { pageSize, currentPage, sortColumn, searchQuery } = this.state;\r\n    const { user } = this.props;\r\n\r\n    if (count === 0) return <p>There are no games in the database</p>;\r\n\r\n    const { totalCount, data: games } = this.getPagedData();\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-2\">\r\n          <ListGroup\r\n            items={this.state.genres}\r\n            selectedItem={this.state.selectedGenre}\r\n            onItemSelect={this.handleGenreSelect}\r\n          />\r\n        </div>\r\n        <div className=\"col\">\r\n          {user && (\r\n            <Link\r\n              to=\"/games/new\"\r\n              className=\"btn btn-primary\"\r\n              style={{ marginBottom: 20 }}>\r\n              New Game\r\n            </Link>\r\n          )}\r\n\r\n          <p>Showing {totalCount} games in the database.</p>\r\n\r\n          <SearchBox value={searchQuery} onChange={this.handleSearch} />\r\n\r\n          <GamesTable\r\n            games={games}\r\n            sortColumn={sortColumn}\r\n            onLike={this.handleLike}\r\n            onDelete={this.handleDelete}\r\n            onSort={this.handleSort}\r\n          />\r\n\r\n          <Pagination\r\n            itemsCount={totalCount}\r\n            pageSize={pageSize}\r\n            currentPage={currentPage}\r\n            onPageChange={this.handlePageChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Games;\r\n","import React from 'react';\r\n\r\nconst Customers = () => {\r\n  return <h1>Customers</h1>;\r\n};\r\n\r\nexport default Customers;\r\n","import React from 'react';\r\n\r\nconst Rentals = () => {\r\n  return <h1>Rentals</h1>;\r\n};\r\n\r\nexport default Rentals;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n  return <h1>Not Found</h1>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\nconst NavBar = ({ user }) => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          GameSpot\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarNav\"\r\n          aria-controls=\"navbarNav\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" aria-current=\"page\" to=\"/games\">\r\n                Games\r\n              </NavLink>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to=\"/customers\">\r\n                Customers\r\n              </NavLink>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to=\"/rentals\">\r\n                Rentals\r\n              </NavLink>\r\n            </li>\r\n\r\n            {!user && (\r\n              <React.Fragment>\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/login\">\r\n                    Login\r\n                  </NavLink>\r\n                </li>\r\n\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/register\">\r\n                    Register\r\n                  </NavLink>\r\n                </li>\r\n              </React.Fragment>\r\n            )}\r\n            {user && (\r\n              <React.Fragment>\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/me\">\r\n                    {user.name}\r\n                  </NavLink>\r\n                </li>\r\n\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/logout\">\r\n                    Logout\r\n                  </NavLink>\r\n                </li>\r\n              </React.Fragment>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\n\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group mb-3\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input {...rest} name={name} id={name} className=\"form-control\" />\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\r\n\r\nconst Select = ({ name, label, options, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select name={name} id={name} {...rest} className=\"form-control\">\r\n        <option value=\"\" />\r\n        {options.map((option) => (\r\n          <option key={option._id} value={option._id}>\r\n            {option.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Input from './input';\r\nimport Select from './select';\r\n\r\nclass Form extends React.Component {\r\n  state = {\r\n    data: {},\r\n    errors: {},\r\n  };\r\n\r\n  validate = () => {\r\n    const options = { abortEarly: false };\r\n\r\n    const { error } = Joi.validate(this.state.data, this.schema, options);\r\n\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n\r\n    for (let item of error.details) errors[item.path[0]] = item.message;\r\n    return errors;\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n    this.doSubmit();\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  renderButton(label) {\r\n    return (\r\n      <button disabled={this.validate()} className=\"btn btn-primary\">\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  renderInput(name, label, type = 'text') {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        label={label}\r\n        value={data[name]}\r\n        error={errors[name]}\r\n        onChange={this.handleChange}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderSelect(name, label, options) {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Select\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        options={options}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Form from './common/form';\r\nimport { getGame, saveGame } from '../services/gameService';\r\nimport { getGenres } from '../services/genreService';\r\n\r\nclass GameForm extends Form {\r\n  state = {\r\n    data: {\r\n      title: '',\r\n      genreId: '',\r\n      numberInStock: '',\r\n      dailyRentalRate: '',\r\n    },\r\n    genres: [],\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    _id: Joi.string(),\r\n    title: Joi.string().required().label('Title'),\r\n    genreId: Joi.string().required().label('Genre'),\r\n    numberInStock: Joi.number()\r\n      .required()\r\n      .min(0)\r\n      .max(100)\r\n      .label('Number in Stock'),\r\n    dailyRentalRate: Joi.number()\r\n      .required()\r\n      .min(0)\r\n      .max(10)\r\n      .label('Daily Rental Rate'),\r\n  };\r\n\r\n  async populateGenres() {\r\n    const { data: genres } = await getGenres();\r\n    this.setState({ genres });\r\n  }\r\n\r\n  async populateGame() {\r\n    const gameId = this.props.match.params.id;\r\n    if (gameId === 'new') return;\r\n\r\n    try {\r\n      const { data: game } = await getGame(gameId);\r\n      this.setState({ data: this.mapToViewModel(game) });\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        this.props.history.replace('/not-found');\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.populateGenres();\r\n    await this.populateGame();\r\n  }\r\n\r\n  mapToViewModel(game) {\r\n    return {\r\n      _id: game._id,\r\n      title: game.title,\r\n      genreId: game.genre._id,\r\n      numberInStock: game.numberInStock,\r\n      dailyRentalRate: game.dailyRentalRate,\r\n    };\r\n  }\r\n\r\n  doSubmit = async () => {\r\n    await saveGame(this.state.data);\r\n\r\n    this.props.history.push('/games');\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Game Form</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput('title', 'Title')}\r\n          {this.renderSelect('genreId', 'Genre', this.state.genres)}\r\n          {this.renderInput('numberInStock', 'Number in Stock', 'number')}\r\n          {this.renderInput('dailyRentalRate', 'Rate')}\r\n          {this.renderButton('Save')}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameForm;\r\n","import React from 'react';\r\nimport Joi from 'joi-browser';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Form from './common/form';\r\nimport { getCurrentUser, login } from '../services/authService';\r\n\r\nclass LoginForm extends Form {\r\n  state = {\r\n    data: { username: '', password: '' },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string().required().label('Username'),\r\n    password: Joi.string().required().label('Password'),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const { data } = this.state;\r\n      await login(data.username, data.password);\r\n\r\n      const { state } = this.props.location;\r\n      window.location = state ? state.from.pathname : '/';\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (getCurrentUser()) return <Redirect to=\"/\" />;\r\n\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput('username', 'Username')}\r\n          {this.renderInput('password', 'Password', 'password')}\r\n          {this.renderButton('Login')}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import http from './httpService';\r\nimport { apiUrl } from '../config.json';\r\n\r\nconst apiEndpoint = apiUrl + '/users';\r\n\r\nexport function register(user) {\r\n    return http.post(apiEndpoint, {\r\n        email: user.username,\r\n        password: user.password,\r\n        name: user.name,\r\n    });\r\n}","import React from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Form from './common/form';\r\nimport { register } from '../services/userService';\r\nimport { loginWithJwt } from '../services/authService';\r\n\r\nclass RegisterForm extends Form {\r\n  state = {\r\n    data: { username: '', password: '', name: '' },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string().required().email().label('Username'),\r\n    password: Joi.string().required().min(5).label('Password'),\r\n    name: Joi.string().required().label('Name'),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const response = await register(this.state.data);\r\n      loginWithJwt(response.headers['x-auth-token']);\r\n\r\n      window.location = '/';\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Register</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput('username', 'Username')}\r\n          {this.renderInput('password', 'Password', 'password')}\r\n          {this.renderInput('name', 'Name')}\r\n          {this.renderButton('Register')}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React from 'react';\r\nimport { logout } from '../services/authService';\r\n\r\nclass Logout extends React.Component {\r\n  componentDidMount() {\r\n    logout();\r\n    window.location = '/';\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { getCurrentUser } from '../../services/authService';\r\n\r\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!getCurrentUser())\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: '/login',\r\n                state: { from: props.location },\r\n              }}\r\n            />\r\n          );\r\n        return Component ? <Component {...props} /> : render(props);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\n\nimport Games from './components/games';\nimport Customers from './components/customers';\nimport Rentals from './components/rentals';\nimport NotFound from './components/notFound';\nimport NavBar from './components/navBar';\nimport GameForm from './components/gameForm';\nimport LoginForm from './components/loginForm';\nimport RegisterForm from './components/registerForm';\nimport Logout from './components/logout';\n\nimport ProtectedRoute from './components/common/protectedRoute';\n\nimport { getCurrentUser } from './services/authService';\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\n\nclass App extends React.Component {\n  state = {};\n\n  componentDidMount() {\n    const user = getCurrentUser();\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n    return (\n      <React.Fragment>\n        <main className=\"container\">\n          <ToastContainer />\n          <NavBar user={user} />\n          <Switch>\n            <Route path=\"/register\" component={RegisterForm} />\n            <Route path=\"/login\" component={LoginForm} />\n            <Route path=\"/logout\" component={Logout} />\n            <ProtectedRoute path=\"/games/:id\" component={GameForm} />\n            <Route\n              path=\"/games\"\n              render={(props) => <Games {...props} user={user} />}\n            />\n            <Route path=\"/customers\" component={Customers} />\n            <Route path=\"/rentals\" component={Rentals} />\n            <Route path=\"/not-found\" component={NotFound} />\n            <Redirect from=\"/\" exact to=\"/games\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\n\nconsole.log('SUPERMAN', process.env.REACT_APP_NAME);\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}